$date
	Fri Apr 18 09:18:34 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Accumulating_Adder_tb $end
$var wire 32 ! result [31:0] $end
$var wire 1 " Exception $end
$var reg 32 # a_operand [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module uut $end
$var wire 1 " Exception $end
$var wire 32 & a_operand [31:0] $end
$var wire 1 $ clk $end
$var wire 32 ' operand_a [31:0] $end
$var wire 32 ( operand_b [31:0] $end
$var wire 1 ) output_sign $end
$var wire 1 % reset $end
$var wire 24 * significand_b [23:0] $end
$var wire 25 + significand_add [24:0] $end
$var wire 24 , significand_a [23:0] $end
$var wire 8 - result_exp [7:0] $end
$var wire 8 . exponent_diff [7:0] $end
$var wire 24 / aligned_b [23:0] $end
$var wire 24 0 aligned_a [23:0] $end
$var wire 31 1 add_sum [30:0] $end
$var reg 32 2 accumulator [31:0] $end
$var reg 32 3 result [31:0] $end
$upscope $end
$scope task print_result $end
$var reg 32 4 res [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
1%
0$
b0 #
0"
b0 !
$end
#5000
1$
#10000
b100000000000000000000000 +
b100000000000000000000000 0
b111111100000000000000000000000 1
b100000000000000000000000 ,
b1111111 .
b1111111 -
0$
b111111100000000000000000000000 '
b111111100000000000000000000000 #
b111111100000000000000000000000 &
0%
#15000
b1000000000000000000000000000000 1
b100000000000000000000000 /
b100000000000000000000000 *
b0 .
b1000000000000000000000000 +
b100000000000000000000000 0
b111111100000000000000000000000 (
b111111100000000000000000000000 2
1$
#20000
b110000000000000000000000 +
b10000000000000000000000 /
b1000000010000000000000000000000 1
b1 .
b10000000 -
0$
b1000000000000000000000000000000 '
b1000000000000000000000000000000 #
b1000000000000000000000000000000 &
b0 4
#25000
b1000000101000000000000000000000 1
b110000000000000000000000 *
b0 .
b100000000000000000000000 0
b1010000000000000000000000 +
b110000000000000000000000 /
b111111100000000000000000000000 !
b111111100000000000000000000000 3
b1000000010000000000000000000000 (
b1000000010000000000000000000000 2
1$
#30000
b111000000000000000000000 +
b11000000000000000000000 /
b1000000111000000000000000000000 1
b1 .
b10000001 -
0$
b1000000100000000000000000000000 '
b1000000100000000000000000000000 #
b1000000100000000000000000000000 &
b111111100000000000000000000000 4
#35000
b1000001001100000000000000000000 1
b111000000000000000000000 *
b0 .
b100000000000000000000000 0
b1011000000000000000000000 +
b111000000000000000000000 /
b1000000010000000000000000000000 !
b1000000010000000000000000000000 3
b1000000111000000000000000000000 (
b1000000111000000000000000000000 2
1$
#40000
b1000000111100000000000000000000 1
b111100000000000000000000 +
b100000000000000000000 0
b11 .
0$
b111111000000000000000000000000 '
b111111000000000000000000000000 #
b111111000000000000000000000000 &
b1000000010000000000000000000000 4
#45000
b1000001000000000000000000000000 1
b1000000000000000000000000 +
b111100000000000000000000 /
b111100000000000000000000 *
b1000000111000000000000000000000 !
b1000000111000000000000000000000 3
b1000000111100000000000000000000 (
b1000000111100000000000000000000 2
1$
#50000
b111111000000000000000000000000 1
b0 *
b1111110 .
b100000000000000000000000 0
b100000000000000000000000 +
b0 /
b1111110 -
b0 !
b0 3
b0 (
b0 2
0$
1%
b1000000111000000000000000000000 4
#55000
1$
#60000
0$
b0 4
